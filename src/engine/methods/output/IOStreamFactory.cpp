/* 
 * Copyright (C) 1999-2004 the AnT project,
 * Department of Image Understanding,
 * University of Stuttgart, Germany.
 * 
 * This file is part of AnT,
 * a simulation and analysis tool for dynamical systems.
 * 
 * AnT is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * AnT is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
 *
 * $Id: IOStreamFactory.cpp,v 1.9 2004/10/18 11:09:06 wackengg Exp $
 *
 */

#include "methods/output/IOStreamFactory.hpp"
#include "data/ScanData.hpp"
#include "data/DynSysData.hpp"
#include "AnT-init.hpp"

using std::ostream;

#ifndef ANT_CONFIG_H
#include "config.h"
#endif

void printTimeOfDay (ostream* f)
{
    time_t timeVar;

    time (&timeVar);

    (*f) << ctime (&timeVar);
}

// inline 
ostream* 
IOStreamFactory::
getOStream (const string& fileName,
	    ScanData* scanData_ptr)
{
  return getOStream (fileName.c_str (), scanData_ptr);
}

// virtual 
IOStreamFactory::
~IOStreamFactory () 
{
}

// static 
void 
IOStreamFactory::
setPrecision (ostream* f)
{
  f->setf (ostream::scientific, ostream::floatfield);
  f->precision (OUTPUT_STREAM_PRECISION);
}
  
// static 
void 
IOStreamFactory::
printHeader ( ostream* stream,
	      ScanData* scanData_ptr )
{
/* Note: if scanData_ptr is NULL, we assume, that no header must be
   written. Be careful with files like PGM pictures! 

   Design mistake: it should be an extra boolean flag!
* */
 
  if (scanData_ptr == NULL)
  {
    return;
  }

  /* The clients should not write any header and in the case of a
     server, the code below is buggy because 'scanData.iterData()' is a
     dereferenced NULL pointer (uargh !!!!): */
  if (AnT::runmode () != "standalone")
  {
    return;
  }

  const string GENERATED_BY_STRING
    = string ("This file is generated by AnT ")
    + ANT_MAJOR + '.' + ANT_MINOR
#if 1 // 0 /* commented out */
    + ", Release " + ANT_SUB + ANT_REV
    + " (v " + ANT_SUB + "." + ANT_REV_NUMBER + "." + ANT_PATCH + ")"
#endif
    + ", (c) " + ANT_YEARS;

  *stream << OUTPUT_COMMENT_CHAR 
	  << " "
	  << GENERATED_BY_STRING
	  << ","
	  << endl
	  << OUTPUT_COMMENT_CHAR 
	  << " at ";
  
  printTimeOfDay (stream);

  *stream << endl;      

  (scanData_ptr->iterData().dynSysData)
      .printDescription (*stream);

  *stream << OUTPUT_COMMENT_CHAR 
	  << endl;

  int scanMode = scanData_ptr->getScanMode ();

  *stream << OUTPUT_COMMENT_CHAR 
	  << " "
	  << "Scan mode:"
	  << " "
	  << scanMode;

  if (scanMode <= 0)
  {
    *stream << " "
	    << "(a single simulation run)";
  }

  *stream << endl;

  *stream << OUTPUT_COMMENT_CHAR 
	  << endl;      
}
